Search.setIndex({"docnames": ["api", "api/compas_pb", "api/compas_pb.conversions", "api/compas_pb.core", "api/compas_pb.registry", "api/generated/compas_pb.conversions.arc_from_pb", "api/generated/compas_pb.conversions.arc_to_pb", "api/generated/compas_pb.conversions.bezier_from_pb", "api/generated/compas_pb.conversions.bezier_to_pb", "api/generated/compas_pb.conversions.box_from_pb", "api/generated/compas_pb.conversions.box_to_pb", "api/generated/compas_pb.conversions.capsule_from_pb", "api/generated/compas_pb.conversions.capsule_to_pb", "api/generated/compas_pb.conversions.circle_from_pb", "api/generated/compas_pb.conversions.circle_to_pb", "api/generated/compas_pb.conversions.cone_from_pb", "api/generated/compas_pb.conversions.cone_to_pb", "api/generated/compas_pb.conversions.cylinder_from_pb", "api/generated/compas_pb.conversions.cylinder_to_pb", "api/generated/compas_pb.conversions.ellipse_from_pb", "api/generated/compas_pb.conversions.ellipse_to_pb", "api/generated/compas_pb.conversions.frame_from_pb", "api/generated/compas_pb.conversions.frame_to_pb", "api/generated/compas_pb.conversions.hyperbola_from_pb", "api/generated/compas_pb.conversions.hyperbola_to_pb", "api/generated/compas_pb.conversions.line_from_pb", "api/generated/compas_pb.conversions.line_to_pb", "api/generated/compas_pb.conversions.mesh_from_pb", "api/generated/compas_pb.conversions.mesh_to_pb", "api/generated/compas_pb.conversions.parabola_from_pb", "api/generated/compas_pb.conversions.parabola_to_pb", "api/generated/compas_pb.conversions.plane_from_pb", "api/generated/compas_pb.conversions.plane_to_pb", "api/generated/compas_pb.conversions.point_from_pb", "api/generated/compas_pb.conversions.point_to_pb", "api/generated/compas_pb.conversions.pointcloud_from_pb", "api/generated/compas_pb.conversions.pointcloud_to_pb", "api/generated/compas_pb.conversions.polygon_from_pb", "api/generated/compas_pb.conversions.polygon_to_pb", "api/generated/compas_pb.conversions.polyhedron_from_pb", "api/generated/compas_pb.conversions.polyhedron_to_pb", "api/generated/compas_pb.conversions.polyline_from_pb", "api/generated/compas_pb.conversions.polyline_to_pb", "api/generated/compas_pb.conversions.projection_from_pb", "api/generated/compas_pb.conversions.projection_to_pb", "api/generated/compas_pb.conversions.quaternion_from_pb", "api/generated/compas_pb.conversions.quaternion_to_pb", "api/generated/compas_pb.conversions.reflection_from_pb", "api/generated/compas_pb.conversions.reflection_to_pb", "api/generated/compas_pb.conversions.rotation_from_pb", "api/generated/compas_pb.conversions.rotation_to_pb", "api/generated/compas_pb.conversions.scale_from_pb", "api/generated/compas_pb.conversions.scale_to_pb", "api/generated/compas_pb.conversions.shear_from_pb", "api/generated/compas_pb.conversions.shear_to_pb", "api/generated/compas_pb.conversions.sphere_from_pb", "api/generated/compas_pb.conversions.sphere_to_pb", "api/generated/compas_pb.conversions.torus_from_pb", "api/generated/compas_pb.conversions.torus_to_pb", "api/generated/compas_pb.conversions.transformation_from_pb", "api/generated/compas_pb.conversions.transformation_to_pb", "api/generated/compas_pb.conversions.translation_from_pb", "api/generated/compas_pb.conversions.translation_to_pb", "api/generated/compas_pb.conversions.vector_from_pb", "api/generated/compas_pb.conversions.vector_to_pb", "api/generated/compas_pb.core.any_from_pb", "api/generated/compas_pb.core.any_to_pb", "api/generated/compas_pb.core.deserialize_message_bts", "api/generated/compas_pb.core.deserialize_message_from_json", "api/generated/compas_pb.core.primitive_from_pb", "api/generated/compas_pb.core.primitive_to_pb", "api/generated/compas_pb.core.serialize_message_bts", "api/generated/compas_pb.core.serialize_message_to_json", "api/generated/compas_pb.pb_dump", "api/generated/compas_pb.pb_dump_bts", "api/generated/compas_pb.pb_dump_json", "api/generated/compas_pb.pb_load", "api/generated/compas_pb.pb_load_bts", "api/generated/compas_pb.pb_load_json", "api/generated/compas_pb.registry.PbSerializerRegistrationError", "api/generated/compas_pb.registry.SerializerRegistry", "api/generated/compas_pb.registry.SerializerRegistry.get_deserializer", "api/generated/compas_pb.registry.SerializerRegistry.get_serializer", "api/generated/compas_pb.registry.SerializerRegistry.register_deserializer", "api/generated/compas_pb.registry.SerializerRegistry.register_serializer", "examples", "index", "installation", "license", "missing_compas_type", "protobuf"], "filenames": ["api.rst", "api/compas_pb.rst", "api/compas_pb.conversions.rst", "api/compas_pb.core.rst", "api/compas_pb.registry.rst", "api/generated/compas_pb.conversions.arc_from_pb.rst", "api/generated/compas_pb.conversions.arc_to_pb.rst", "api/generated/compas_pb.conversions.bezier_from_pb.rst", "api/generated/compas_pb.conversions.bezier_to_pb.rst", "api/generated/compas_pb.conversions.box_from_pb.rst", "api/generated/compas_pb.conversions.box_to_pb.rst", "api/generated/compas_pb.conversions.capsule_from_pb.rst", "api/generated/compas_pb.conversions.capsule_to_pb.rst", "api/generated/compas_pb.conversions.circle_from_pb.rst", "api/generated/compas_pb.conversions.circle_to_pb.rst", "api/generated/compas_pb.conversions.cone_from_pb.rst", "api/generated/compas_pb.conversions.cone_to_pb.rst", "api/generated/compas_pb.conversions.cylinder_from_pb.rst", "api/generated/compas_pb.conversions.cylinder_to_pb.rst", "api/generated/compas_pb.conversions.ellipse_from_pb.rst", "api/generated/compas_pb.conversions.ellipse_to_pb.rst", "api/generated/compas_pb.conversions.frame_from_pb.rst", "api/generated/compas_pb.conversions.frame_to_pb.rst", "api/generated/compas_pb.conversions.hyperbola_from_pb.rst", "api/generated/compas_pb.conversions.hyperbola_to_pb.rst", "api/generated/compas_pb.conversions.line_from_pb.rst", "api/generated/compas_pb.conversions.line_to_pb.rst", "api/generated/compas_pb.conversions.mesh_from_pb.rst", "api/generated/compas_pb.conversions.mesh_to_pb.rst", "api/generated/compas_pb.conversions.parabola_from_pb.rst", "api/generated/compas_pb.conversions.parabola_to_pb.rst", "api/generated/compas_pb.conversions.plane_from_pb.rst", "api/generated/compas_pb.conversions.plane_to_pb.rst", "api/generated/compas_pb.conversions.point_from_pb.rst", "api/generated/compas_pb.conversions.point_to_pb.rst", "api/generated/compas_pb.conversions.pointcloud_from_pb.rst", "api/generated/compas_pb.conversions.pointcloud_to_pb.rst", "api/generated/compas_pb.conversions.polygon_from_pb.rst", "api/generated/compas_pb.conversions.polygon_to_pb.rst", "api/generated/compas_pb.conversions.polyhedron_from_pb.rst", "api/generated/compas_pb.conversions.polyhedron_to_pb.rst", "api/generated/compas_pb.conversions.polyline_from_pb.rst", "api/generated/compas_pb.conversions.polyline_to_pb.rst", "api/generated/compas_pb.conversions.projection_from_pb.rst", "api/generated/compas_pb.conversions.projection_to_pb.rst", "api/generated/compas_pb.conversions.quaternion_from_pb.rst", "api/generated/compas_pb.conversions.quaternion_to_pb.rst", "api/generated/compas_pb.conversions.reflection_from_pb.rst", "api/generated/compas_pb.conversions.reflection_to_pb.rst", "api/generated/compas_pb.conversions.rotation_from_pb.rst", "api/generated/compas_pb.conversions.rotation_to_pb.rst", "api/generated/compas_pb.conversions.scale_from_pb.rst", "api/generated/compas_pb.conversions.scale_to_pb.rst", "api/generated/compas_pb.conversions.shear_from_pb.rst", "api/generated/compas_pb.conversions.shear_to_pb.rst", "api/generated/compas_pb.conversions.sphere_from_pb.rst", "api/generated/compas_pb.conversions.sphere_to_pb.rst", "api/generated/compas_pb.conversions.torus_from_pb.rst", "api/generated/compas_pb.conversions.torus_to_pb.rst", "api/generated/compas_pb.conversions.transformation_from_pb.rst", "api/generated/compas_pb.conversions.transformation_to_pb.rst", "api/generated/compas_pb.conversions.translation_from_pb.rst", "api/generated/compas_pb.conversions.translation_to_pb.rst", "api/generated/compas_pb.conversions.vector_from_pb.rst", "api/generated/compas_pb.conversions.vector_to_pb.rst", "api/generated/compas_pb.core.any_from_pb.rst", "api/generated/compas_pb.core.any_to_pb.rst", "api/generated/compas_pb.core.deserialize_message_bts.rst", "api/generated/compas_pb.core.deserialize_message_from_json.rst", "api/generated/compas_pb.core.primitive_from_pb.rst", "api/generated/compas_pb.core.primitive_to_pb.rst", "api/generated/compas_pb.core.serialize_message_bts.rst", "api/generated/compas_pb.core.serialize_message_to_json.rst", "api/generated/compas_pb.pb_dump.rst", "api/generated/compas_pb.pb_dump_bts.rst", "api/generated/compas_pb.pb_dump_json.rst", "api/generated/compas_pb.pb_load.rst", "api/generated/compas_pb.pb_load_bts.rst", "api/generated/compas_pb.pb_load_json.rst", "api/generated/compas_pb.registry.PbSerializerRegistrationError.rst", "api/generated/compas_pb.registry.SerializerRegistry.rst", "api/generated/compas_pb.registry.SerializerRegistry.get_deserializer.rst", "api/generated/compas_pb.registry.SerializerRegistry.get_serializer.rst", "api/generated/compas_pb.registry.SerializerRegistry.register_deserializer.rst", "api/generated/compas_pb.registry.SerializerRegistry.register_serializer.rst", "examples.rst", "index.rst", "installation.rst", "license.rst", "missing_compas_type.rst", "protobuf.rst"], "titles": ["API Reference", "compas_pb", "compas_pb.conversions", "compas_pb.core", "compas_pb.registry", "arc_from_pb", "arc_to_pb", "bezier_from_pb", "bezier_to_pb", "box_from_pb", "box_to_pb", "capsule_from_pb", "capsule_to_pb", "circle_from_pb", "circle_to_pb", "cone_from_pb", "cone_to_pb", "cylinder_from_pb", "cylinder_to_pb", "ellipse_from_pb", "ellipse_to_pb", "frame_from_pb", "frame_to_pb", "hyperbola_from_pb", "hyperbola_to_pb", "line_from_pb", "line_to_pb", "mesh_from_pb", "mesh_to_pb", "parabola_from_pb", "parabola_to_pb", "plane_from_pb", "plane_to_pb", "point_from_pb", "point_to_pb", "pointcloud_from_pb", "pointcloud_to_pb", "polygon_from_pb", "polygon_to_pb", "polyhedron_from_pb", "polyhedron_to_pb", "polyline_from_pb", "polyline_to_pb", "projection_from_pb", "projection_to_pb", "quaternion_from_pb", "quaternion_to_pb", "reflection_from_pb", "reflection_to_pb", "rotation_from_pb", "rotation_to_pb", "scale_from_pb", "scale_to_pb", "shear_from_pb", "shear_to_pb", "sphere_from_pb", "sphere_to_pb", "torus_from_pb", "torus_to_pb", "transformation_from_pb", "transformation_to_pb", "translation_from_pb", "translation_to_pb", "vector_from_pb", "vector_to_pb", "any_from_pb", "any_to_pb", "deserialize_message_bts", "deserialize_message_from_json", "primitive_from_pb", "primitive_to_pb", "serialize_message_bts", "serialize_message_to_json", "pb_dump", "pb_dump_bts", "pb_dump_json", "pb_load", "pb_load_bts", "pb_load_json", "PbSerializerRegistrationError", "SerializerRegistry", "SerializerRegistry.get_deserializer", "SerializerRegistry.get_serializer", "SerializerRegistry.register_deserializer", "SerializerRegistry.register_serializer", "Examples", "Installation", "Installation", "License", "Missing COMPAS Type?", "Protobuf Definitions"], "terms": {"compas_pb": [0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 86, 87, 89], "core": [0, 65, 66, 67, 68, 69, 70, 71, 72, 86], "registri": [0, 79, 80, 86], "convers": [0, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 86, 89], "thi": [1, 2, 3, 4, 71, 72, 73, 74, 75, 88, 89], "modul": [1, 2, 3, 4, 89], "provid": [1, 2, 4, 88], "high": 1, "level": [1, 68, 71, 72], "read": [1, 76, 77, 78], "write": [1, 73, 74, 75], "compa": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 85, 86], "object": [1, 2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 80, 85], "from": [1, 2, 76, 77, 78, 85, 86, 87, 88, 89], "file": [1, 73, 76, 77, 88], "us": [1, 86, 88, 89], "protocol": [1, 2, 3, 79], "buffer": [1, 2, 3, 79], "geometri": [2, 85, 86], "messag": [2, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 89], "contain": [3, 69, 76, 77, 78], "class": [3, 65, 66, 69, 70, 80, 89], "data": [3, 65, 66, 67, 68, 71, 72, 73, 74, 75, 76, 77, 78, 82, 85, 89], "system": [4, 89], "serial": [4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40, 42, 44, 46, 48, 50, 52, 54, 56, 58, 60, 62, 64, 71, 72, 79, 80, 84], "deseri": [4, 5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 67, 68, 80, 83, 85, 86, 89], "proto_data": [5, 7, 9, 11, 13, 15, 17, 19, 21, 23, 25, 27, 29, 31, 33, 35, 37, 39, 41, 43, 45, 47, 49, 51, 53, 55, 57, 59, 61, 63, 65, 69, 89], "convert": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 89], "protobuf": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 83, 86], "arc": [5, 6], "paramet": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "arc_pb2": [5, 6], "arcdata": [5, 6], "The": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 76, 77, 78, 87, 88], "repres": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "an": [5, 19, 88, 90], "return": [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89], "bezier": [7, 8], "bezier_pb2": [7, 8], "bezierdata": [7, 8], "box": [9, 10, 85], "box_pb2": [9, 10], "boxdata": [9, 10], "capsul": [11, 12], "capsule_pb2": [11, 12], "capsuledata": [11, 12], "circl": [13, 14], "circle_pb2": [13, 14, 89], "circledata": [13, 14, 89], "cone": [15, 16], "cone_pb2": [15, 16], "conedata": [15, 16], "cylind": [17, 18], "cylinder_pb2": [17, 18], "cylinderdata": [17, 18], "ellips": [19, 20], "ellipse_pb2": [19, 20], "ellipsedata": [19, 20], "frame": [21, 22, 89], "frame_pb2": [21, 22], "framedata": [21, 22, 89], "frame_obj": 22, "hyperbola": [23, 24], "hyperbola_pb2": [23, 24], "hyperboladata": [23, 24], "line": [25, 26], "line_pb2": [25, 26], "linedata": [25, 26], "line_obj": 26, "mesh": [27, 28, 85], "mesh_pb2": [27, 28], "meshdata": [27, 28], "parabola": [29, 30], "parabola_pb2": [29, 30], "paraboladata": [29, 30], "plane": [31, 32], "plane_pb2": [31, 32], "planedata": [31, 32], "point": [33, 34], "point_pb2": [33, 34], "pointdata": [33, 34], "obj": [34, 64, 66, 70, 89], "pointcloud": [35, 36], "pointcloud_pb2": [35, 36], "pointclouddata": [35, 36], "polygon": [37, 38], "polygon_pb2": [37, 38], "polygondata": [37, 38], "polyhedron": [39, 40], "polyhedron_pb2": [39, 40], "polyhedrondata": [39, 40], "polylin": [41, 42, 86], "polyline_pb2": [41, 42], "polylinedata": [41, 42], "project": [43, 44], "projection_pb2": [43, 44], "projectiondata": [43, 44], "quaternion": [45, 46], "quaternion_pb2": [45, 46], "quaterniondata": [45, 46], "reflect": [47, 48], "reflection_pb2": [47, 48], "reflectiondata": [47, 48], "rotat": [49, 50], "rotation_pb2": [49, 50], "rotationdata": [49, 50], "scale": [51, 52], "scale_pb2": [51, 52], "scaledata": [51, 52], "shear": [53, 54], "shear_pb2": [53, 54], "sheardata": [53, 54], "sphere": [55, 56], "sphere_pb2": [55, 56], "spheredata": [55, 56], "toru": [57, 58], "torus_pb2": [57, 58], "torusdata": [57, 58], "transform": [59, 60], "transformation_pb2": [59, 60], "transformationdata": [59, 60], "translat": [61, 62], "translation_pb2": [61, 62], "translationdata": [61, 62], "vector": [63, 64, 86], "vector_pb2": [63, 64], "vectordata": [63, 64], "support": [65, 89], "gener": [65, 66, 69, 70, 90], "message_pb2": [65, 66, 67, 69, 70], "anydata": [65, 66, 69, 70], "type": [65, 66, 69, 70, 83, 84, 85, 86], "union": [65, 66, 69, 73, 74, 75, 76, 77, 78], "list": [65, 66, 71, 72, 73, 74, 75, 76, 77, 78], "dict": [65, 66, 68, 72, 73, 74, 75, 76, 77, 78], "int": [65, 66, 69, 70], "float": [65, 66, 69, 70, 89], "bool": [65, 66, 69, 70], "str": [65, 66, 68, 69, 70, 78], "can": [65, 66, 71, 72, 86, 87, 90], "primit": [65, 66, 69], "ani": [66, 73, 74, 75, 88], "binary_data": 67, "binari": [67, 73, 76, 77], "byte": [67, 69, 70, 71], "string": [67, 68, 73, 74, 75, 76, 77, 78, 89], "message_data": 67, "messagedata": 67, "json_data": 68, "top": [68, 71, 72], "dictionari": [68, 71, 72], "A": [68, 73, 76, 77, 78, 86, 88, 89], "json": [68, 75, 78], "represent": [68, 75, 78], "python": [69, 70, 85], "nativ": [69, 70], "struct_pb2": 69, "valu": 69, "data_offset": 69, "filepath": [73, 76, 77], "collect": [73, 74, 75, 76, 77, 78], "protobuff": [73, 74, 75], "serializ": [73, 74, 75], "includ": [73, 74, 75, 88], "combin": [73, 74, 75], "": [73, 74, 75, 76, 77, 78], "path": [73, 76, 77, 85, 86], "like": [73, 76, 77, 89], "writeabl": 73, "none": [73, 74], "btye": 74, "readabl": [76, 77], "except": 79, "base": [79, 80], "custom": [79, 89], "error": 79, "registr": 79, "manag": 80, "method": 80, "classmethod": [81, 82, 83, 84], "pb_typenam": 81, "type_url": 83, "func": [83, 84], "regist": [83, 84, 89], "function": [83, 84], "given": [83, 84], "url": 83, "obj_typ": 84, "let": [85, 86], "you": [85, 86], "de": 85, "arbitrarili": 85, "nest": 85, "builtin": 85, "basic": 85, "datastructur": 85, "import": [85, 86, 89], "pb_dump": [85, 86], "pb_load": [85, 86], "from_width_height_depth": 85, "1": [85, 86], "0": [85, 86], "2": [85, 86, 89], "3": [85, 86], "from_shap": 85, "r": 85, "box_mesh": 85, "pb_dump_bt": [85, 86], "spaceship_control": 85, "space_interfac": 85, "send_byt": 85, "Or": 85, "don": 85, "t": [85, 89], "have": 85, "spaceship": 85, "pb_load_bt": [85, 86], "extens": 86, "which": 86, "stabl": 86, "releas": [86, 87], "pypi": [86, 87], "pip": [86, 87], "loaded_vector": 86, "bytes_vector": 86, "direct": 86, "outlin": 86, "4": 86, "5": 86, "pb_data": 86, "loaded_data": 86, "introduct": 86, "miss": 86, "exampl": 86, "api": 86, "refer": 86, "definit": 86, "licens": 86, "ar": 87, "avail": [87, 89, 90], "version": 87, "local": 87, "sourc": 87, "git": 87, "clone": 87, "http": 87, "github": 87, "com": 87, "gramaziokohl": 87, "cd": 87, "e": 87, "To": [87, 89], "dev": 87, "requir": 87, "mit": 88, "gramazio": 88, "kohler": 88, "research": 88, "permiss": 88, "i": [88, 89], "herebi": 88, "grant": 88, "free": 88, "charg": 88, "person": 88, "obtain": 88, "copi": 88, "softwar": 88, "associ": 88, "document": [88, 90], "deal": 88, "without": 88, "restrict": 88, "limit": 88, "right": 88, "modifi": 88, "merg": 88, "publish": 88, "distribut": 88, "sublicens": 88, "sell": 88, "permit": 88, "whom": 88, "furnish": 88, "do": [88, 89], "so": 88, "subject": 88, "follow": [88, 89], "condit": 88, "abov": 88, "copyright": 88, "notic": 88, "shall": 88, "all": 88, "substanti": 88, "portion": 88, "THE": 88, "AS": 88, "warranti": 88, "OF": 88, "kind": 88, "express": 88, "OR": 88, "impli": 88, "BUT": 88, "NOT": 88, "TO": 88, "merchant": 88, "fit": 88, "FOR": 88, "particular": 88, "purpos": 88, "AND": 88, "noninfring": 88, "IN": 88, "NO": 88, "event": 88, "author": 88, "holder": 88, "BE": 88, "liabl": 88, "claim": 88, "damag": 88, "other": 88, "liabil": 88, "whether": 88, "action": 88, "contract": 88, "tort": 88, "otherwis": 88, "aris": 88, "out": [88, 89], "connect": 88, "WITH": 88, "we": 89, "re": 89, "our": 89, "best": 89, "mani": 89, "possibl": 89, "d": 89, "send": 89, "still": 89, "help": 89, "u": 89, "ad": 89, "yourself": 89, "guid": 89, "explain": 89, "how": 89, "extend": 89, "more": 89, "should": 89, "place": 89, "idl": 89, "custom_point": 89, "proto": 89, "syntax": 89, "proto3": 89, "packag": 89, "name": 89, "radiu": 89, "now": 89, "run": 89, "command": 89, "invok": 89, "call": 89, "pb_serial": 89, "pb_deseri": 89, "decor": 89, "These": 89, "plugin": 89, "py": 89, "def": 89, "my_circle_to_pb": 89, "result": 89, "frame_to_pb": 89, "my_circle_from_pb": 89, "frame_from_pb": 89, "auto": 90, "found": 90, "here": 90}, "objects": {"compas_pb.conversions": [[5, 0, 1, "", "arc_from_pb"], [6, 0, 1, "", "arc_to_pb"], [7, 0, 1, "", "bezier_from_pb"], [8, 0, 1, "", "bezier_to_pb"], [9, 0, 1, "", "box_from_pb"], [10, 0, 1, "", "box_to_pb"], [11, 0, 1, "", "capsule_from_pb"], [12, 0, 1, "", "capsule_to_pb"], [13, 0, 1, "", "circle_from_pb"], [14, 0, 1, "", "circle_to_pb"], [15, 0, 1, "", "cone_from_pb"], [16, 0, 1, "", "cone_to_pb"], [17, 0, 1, "", "cylinder_from_pb"], [18, 0, 1, "", "cylinder_to_pb"], [19, 0, 1, "", "ellipse_from_pb"], [20, 0, 1, "", "ellipse_to_pb"], [21, 0, 1, "", "frame_from_pb"], [22, 0, 1, "", "frame_to_pb"], [23, 0, 1, "", "hyperbola_from_pb"], [24, 0, 1, "", "hyperbola_to_pb"], [25, 0, 1, "", "line_from_pb"], [26, 0, 1, "", "line_to_pb"], [27, 0, 1, "", "mesh_from_pb"], [28, 0, 1, "", "mesh_to_pb"], [29, 0, 1, "", "parabola_from_pb"], [30, 0, 1, "", "parabola_to_pb"], [31, 0, 1, "", "plane_from_pb"], [32, 0, 1, "", "plane_to_pb"], [33, 0, 1, "", "point_from_pb"], [34, 0, 1, "", "point_to_pb"], [35, 0, 1, "", "pointcloud_from_pb"], [36, 0, 1, "", "pointcloud_to_pb"], [37, 0, 1, "", "polygon_from_pb"], [38, 0, 1, "", "polygon_to_pb"], [39, 0, 1, "", "polyhedron_from_pb"], [40, 0, 1, "", "polyhedron_to_pb"], [41, 0, 1, "", "polyline_from_pb"], [42, 0, 1, "", "polyline_to_pb"], [43, 0, 1, "", "projection_from_pb"], [44, 0, 1, "", "projection_to_pb"], [45, 0, 1, "", "quaternion_from_pb"], [46, 0, 1, "", "quaternion_to_pb"], [47, 0, 1, "", "reflection_from_pb"], [48, 0, 1, "", "reflection_to_pb"], [49, 0, 1, "", "rotation_from_pb"], [50, 0, 1, "", "rotation_to_pb"], [51, 0, 1, "", "scale_from_pb"], [52, 0, 1, "", "scale_to_pb"], [53, 0, 1, "", "shear_from_pb"], [54, 0, 1, "", "shear_to_pb"], [55, 0, 1, "", "sphere_from_pb"], [56, 0, 1, "", "sphere_to_pb"], [57, 0, 1, "", "torus_from_pb"], [58, 0, 1, "", "torus_to_pb"], [59, 0, 1, "", "transformation_from_pb"], [60, 0, 1, "", "transformation_to_pb"], [61, 0, 1, "", "translation_from_pb"], [62, 0, 1, "", "translation_to_pb"], [63, 0, 1, "", "vector_from_pb"], [64, 0, 1, "", "vector_to_pb"]], "compas_pb.core": [[65, 0, 1, "", "any_from_pb"], [66, 0, 1, "", "any_to_pb"], [67, 0, 1, "", "deserialize_message_bts"], [68, 0, 1, "", "deserialize_message_from_json"], [69, 0, 1, "", "primitive_from_pb"], [70, 0, 1, "", "primitive_to_pb"], [71, 0, 1, "", "serialize_message_bts"], [72, 0, 1, "", "serialize_message_to_json"]], "compas_pb": [[73, 0, 1, "", "pb_dump"], [74, 0, 1, "", "pb_dump_bts"], [75, 0, 1, "", "pb_dump_json"], [76, 0, 1, "", "pb_load"], [77, 0, 1, "", "pb_load_bts"], [78, 0, 1, "", "pb_load_json"]], "compas_pb.registry": [[79, 1, 1, "", "PbSerializerRegistrationError"], [80, 2, 1, "", "SerializerRegistry"]], "compas_pb.registry.SerializerRegistry": [[81, 3, 1, "", "get_deserializer"], [82, 3, 1, "", "get_serializer"], [83, 3, 1, "", "register_deserializer"], [84, 3, 1, "", "register_serializer"]]}, "objtypes": {"0": "py:function", "1": "py:exception", "2": "py:class", "3": "py:method"}, "objnames": {"0": ["py", "function", "Python function"], "1": ["py", "exception", "Python exception"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"]}, "titleterms": {"api": 0, "refer": 0, "compas_pb": [1, 2, 3, 4], "function": [1, 2, 3], "convers": 2, "core": 3, "registri": 4, "class": 4, "arc_from_pb": 5, "arc_to_pb": 6, "bezier_from_pb": 7, "bezier_to_pb": 8, "box_from_pb": 9, "box_to_pb": 10, "capsule_from_pb": 11, "capsule_to_pb": 12, "circle_from_pb": 13, "circle_to_pb": 14, "cone_from_pb": 15, "cone_to_pb": 16, "cylinder_from_pb": 17, "cylinder_to_pb": 18, "ellipse_from_pb": 19, "ellipse_to_pb": 20, "frame_from_pb": 21, "frame_to_pb": 22, "hyperbola_from_pb": 23, "hyperbola_to_pb": 24, "line_from_pb": 25, "line_to_pb": 26, "mesh_from_pb": 27, "mesh_to_pb": 28, "parabola_from_pb": 29, "parabola_to_pb": 30, "plane_from_pb": 31, "plane_to_pb": 32, "point_from_pb": 33, "point_to_pb": 34, "pointcloud_from_pb": 35, "pointcloud_to_pb": 36, "polygon_from_pb": 37, "polygon_to_pb": 38, "polyhedron_from_pb": 39, "polyhedron_to_pb": 40, "polyline_from_pb": 41, "polyline_to_pb": 42, "projection_from_pb": 43, "projection_to_pb": 44, "quaternion_from_pb": 45, "quaternion_to_pb": 46, "reflection_from_pb": 47, "reflection_to_pb": 48, "rotation_from_pb": 49, "rotation_to_pb": 50, "scale_from_pb": 51, "scale_to_pb": 52, "shear_from_pb": 53, "shear_to_pb": 54, "sphere_from_pb": 55, "sphere_to_pb": 56, "torus_from_pb": 57, "torus_to_pb": 58, "transformation_from_pb": 59, "transformation_to_pb": 60, "translation_from_pb": 61, "translation_to_pb": 62, "vector_from_pb": 63, "vector_to_pb": 64, "any_from_pb": 65, "any_to_pb": 66, "deserialize_message_bt": 67, "deserialize_message_from_json": 68, "primitive_from_pb": 69, "primitive_to_pb": 70, "serialize_message_bt": 71, "serialize_message_to_json": 72, "pb_dump": 73, "pb_dump_bt": 74, "pb_dump_json": 75, "pb_load": 76, "pb_load_bt": 77, "pb_load_json": 78, "pbserializerregistrationerror": 79, "serializerregistri": [80, 81, 82, 83, 84], "get_deseri": 81, "get_seri": 82, "register_deseri": 83, "register_seri": 84, "exampl": [85, 89], "serial": [85, 86, 89], "file": [85, 86], "byte": [85, 86], "instal": [86, 87], "basic": 86, "usag": 86, "de": [86, 89], "arbitrarili": 86, "nest": 86, "data": 86, "structur": 86, "tabl": 86, "content": 86, "stabl": 87, "latest": 87, "develop": 87, "licens": 88, "miss": 89, "compa": 89, "type": 89, "creat": 89, "new": 89, "1": 89, "protobuf": [89, 90], "definit": [89, 90], "you": 89, "wish": 89, "add": 89, "circl": 89, "3": 89, "gener": 89, "python": 89, "code": 89, "4": 89}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx": 57}, "alltitles": {"API Reference": [[0, "api-reference"]], "compas_pb": [[1, "compas-pb"]], "Functions": [[1, "functions"], [2, "functions"], [3, "functions"]], "compas_pb.conversions": [[2, "compas-pb-conversions"]], "compas_pb.core": [[3, "compas-pb-core"]], "compas_pb.registry": [[4, "compas-pb-registry"]], "Classes": [[4, "classes"]], "arc_from_pb": [[5, "arc-from-pb"]], "arc_to_pb": [[6, "arc-to-pb"]], "bezier_from_pb": [[7, "bezier-from-pb"]], "bezier_to_pb": [[8, "bezier-to-pb"]], "box_from_pb": [[9, "box-from-pb"]], "box_to_pb": [[10, "box-to-pb"]], "capsule_from_pb": [[11, "capsule-from-pb"]], "capsule_to_pb": [[12, "capsule-to-pb"]], "circle_from_pb": [[13, "circle-from-pb"]], "circle_to_pb": [[14, "circle-to-pb"]], "cone_from_pb": [[15, "cone-from-pb"]], "cone_to_pb": [[16, "cone-to-pb"]], "cylinder_from_pb": [[17, "cylinder-from-pb"]], "cylinder_to_pb": [[18, "cylinder-to-pb"]], "ellipse_from_pb": [[19, "ellipse-from-pb"]], "ellipse_to_pb": [[20, "ellipse-to-pb"]], "frame_from_pb": [[21, "frame-from-pb"]], "frame_to_pb": [[22, "frame-to-pb"]], "hyperbola_from_pb": [[23, "hyperbola-from-pb"]], "hyperbola_to_pb": [[24, "hyperbola-to-pb"]], "line_from_pb": [[25, "line-from-pb"]], "line_to_pb": [[26, "line-to-pb"]], "mesh_from_pb": [[27, "mesh-from-pb"]], "mesh_to_pb": [[28, "mesh-to-pb"]], "parabola_from_pb": [[29, "parabola-from-pb"]], "parabola_to_pb": [[30, "parabola-to-pb"]], "plane_from_pb": [[31, "plane-from-pb"]], "plane_to_pb": [[32, "plane-to-pb"]], "point_from_pb": [[33, "point-from-pb"]], "point_to_pb": [[34, "point-to-pb"]], "pointcloud_from_pb": [[35, "pointcloud-from-pb"]], "pointcloud_to_pb": [[36, "pointcloud-to-pb"]], "polygon_from_pb": [[37, "polygon-from-pb"]], "polygon_to_pb": [[38, "polygon-to-pb"]], "polyhedron_from_pb": [[39, "polyhedron-from-pb"]], "polyhedron_to_pb": [[40, "polyhedron-to-pb"]], "polyline_from_pb": [[41, "polyline-from-pb"]], "polyline_to_pb": [[42, "polyline-to-pb"]], "projection_from_pb": [[43, "projection-from-pb"]], "projection_to_pb": [[44, "projection-to-pb"]], "quaternion_from_pb": [[45, "quaternion-from-pb"]], "quaternion_to_pb": [[46, "quaternion-to-pb"]], "reflection_from_pb": [[47, "reflection-from-pb"]], "reflection_to_pb": [[48, "reflection-to-pb"]], "rotation_from_pb": [[49, "rotation-from-pb"]], "rotation_to_pb": [[50, "rotation-to-pb"]], "scale_from_pb": [[51, "scale-from-pb"]], "scale_to_pb": [[52, "scale-to-pb"]], "shear_from_pb": [[53, "shear-from-pb"]], "shear_to_pb": [[54, "shear-to-pb"]], "sphere_from_pb": [[55, "sphere-from-pb"]], "sphere_to_pb": [[56, "sphere-to-pb"]], "torus_from_pb": [[57, "torus-from-pb"]], "torus_to_pb": [[58, "torus-to-pb"]], "transformation_from_pb": [[59, "transformation-from-pb"]], "transformation_to_pb": [[60, "transformation-to-pb"]], "translation_from_pb": [[61, "translation-from-pb"]], "translation_to_pb": [[62, "translation-to-pb"]], "vector_from_pb": [[63, "vector-from-pb"]], "vector_to_pb": [[64, "vector-to-pb"]], "any_from_pb": [[65, "any-from-pb"]], "any_to_pb": [[66, "any-to-pb"]], "deserialize_message_bts": [[67, "deserialize-message-bts"]], "deserialize_message_from_json": [[68, "deserialize-message-from-json"]], "primitive_from_pb": [[69, "primitive-from-pb"]], "primitive_to_pb": [[70, "primitive-to-pb"]], "serialize_message_bts": [[71, "serialize-message-bts"]], "serialize_message_to_json": [[72, "serialize-message-to-json"]], "pb_dump": [[73, "pb-dump"]], "pb_dump_bts": [[74, "pb-dump-bts"]], "pb_dump_json": [[75, "pb-dump-json"]], "pb_load": [[76, "pb-load"]], "pb_load_bts": [[77, "pb-load-bts"]], "pb_load_json": [[78, "pb-load-json"]], "PbSerializerRegistrationError": [[79, "pbserializerregistrationerror"]], "SerializerRegistry": [[80, "serializerregistry"]], "SerializerRegistry.get_deserializer": [[81, "serializerregistry-get-deserializer"]], "SerializerRegistry.get_serializer": [[82, "serializerregistry-get-serializer"]], "SerializerRegistry.register_deserializer": [[83, "serializerregistry-register-deserializer"]], "SerializerRegistry.register_serializer": [[84, "serializerregistry-register-serializer"]], "Examples": [[85, "examples"]], "Serialization to file": [[85, "serialization-to-file"]], "Serialization to bytes": [[85, "serialization-to-bytes"]], "Installation": [[86, "installation"], [87, "installation"]], "Basic Usage": [[86, "basic-usage"]], "Serialize to file": [[86, "serialize-to-file"]], "(De)serialize to bytes": [[86, "de-serialize-to-bytes"]], "Serialization of arbitrarily nested data structures": [[86, "serialization-of-arbitrarily-nested-data-structures"]], "Table of Contents": [[86, "table-of-contents"]], "Stable": [[87, "stable"]], "Latest": [[87, "latest"]], "Development": [[87, "development"]], "License": [[88, "license"]], "Missing COMPAS Type?": [[89, "missing-compas-type"]], "Creating New Serializers": [[89, "creating-new-serializers"]], "1. Create a protobuf definition for the type you wish to add (for example Circle)": [[89, "create-a-protobuf-definition-for-the-type-you-wish-to-add-for-example-circle"]], "3. Generate the python code for the new type": [[89, "generate-the-python-code-for-the-new-type"]], "4. Create a (de)serializer for the new type": [[89, "create-a-de-serializer-for-the-new-type"]], "Protobuf Definitions": [[90, "protobuf-definitions"]]}, "indexentries": {"arc_from_pb() (in module compas_pb.conversions)": [[5, "compas_pb.conversions.arc_from_pb"]], "arc_to_pb() (in module compas_pb.conversions)": [[6, "compas_pb.conversions.arc_to_pb"]], "bezier_from_pb() (in module compas_pb.conversions)": [[7, "compas_pb.conversions.bezier_from_pb"]], "bezier_to_pb() (in module compas_pb.conversions)": [[8, "compas_pb.conversions.bezier_to_pb"]], "box_from_pb() (in module compas_pb.conversions)": [[9, "compas_pb.conversions.box_from_pb"]], "box_to_pb() (in module compas_pb.conversions)": [[10, "compas_pb.conversions.box_to_pb"]], "capsule_from_pb() (in module compas_pb.conversions)": [[11, "compas_pb.conversions.capsule_from_pb"]], "capsule_to_pb() (in module compas_pb.conversions)": [[12, "compas_pb.conversions.capsule_to_pb"]], "circle_from_pb() (in module compas_pb.conversions)": [[13, "compas_pb.conversions.circle_from_pb"]], "circle_to_pb() (in module compas_pb.conversions)": [[14, "compas_pb.conversions.circle_to_pb"]], "cone_from_pb() (in module compas_pb.conversions)": [[15, "compas_pb.conversions.cone_from_pb"]], "cone_to_pb() (in module compas_pb.conversions)": [[16, "compas_pb.conversions.cone_to_pb"]], "cylinder_from_pb() (in module compas_pb.conversions)": [[17, "compas_pb.conversions.cylinder_from_pb"]], "cylinder_to_pb() (in module compas_pb.conversions)": [[18, "compas_pb.conversions.cylinder_to_pb"]], "ellipse_from_pb() (in module compas_pb.conversions)": [[19, "compas_pb.conversions.ellipse_from_pb"]], "ellipse_to_pb() (in module compas_pb.conversions)": [[20, "compas_pb.conversions.ellipse_to_pb"]], "frame_from_pb() (in module compas_pb.conversions)": [[21, "compas_pb.conversions.frame_from_pb"]], "frame_to_pb() (in module compas_pb.conversions)": [[22, "compas_pb.conversions.frame_to_pb"]], "hyperbola_from_pb() (in module compas_pb.conversions)": [[23, "compas_pb.conversions.hyperbola_from_pb"]], "hyperbola_to_pb() (in module compas_pb.conversions)": [[24, "compas_pb.conversions.hyperbola_to_pb"]], "line_from_pb() (in module compas_pb.conversions)": [[25, "compas_pb.conversions.line_from_pb"]], "line_to_pb() (in module compas_pb.conversions)": [[26, "compas_pb.conversions.line_to_pb"]], "mesh_from_pb() (in module compas_pb.conversions)": [[27, "compas_pb.conversions.mesh_from_pb"]], "mesh_to_pb() (in module compas_pb.conversions)": [[28, "compas_pb.conversions.mesh_to_pb"]], "parabola_from_pb() (in module compas_pb.conversions)": [[29, "compas_pb.conversions.parabola_from_pb"]], "parabola_to_pb() (in module compas_pb.conversions)": [[30, "compas_pb.conversions.parabola_to_pb"]], "plane_from_pb() (in module compas_pb.conversions)": [[31, "compas_pb.conversions.plane_from_pb"]], "plane_to_pb() (in module compas_pb.conversions)": [[32, "compas_pb.conversions.plane_to_pb"]], "point_from_pb() (in module compas_pb.conversions)": [[33, "compas_pb.conversions.point_from_pb"]], "point_to_pb() (in module compas_pb.conversions)": [[34, "compas_pb.conversions.point_to_pb"]], "pointcloud_from_pb() (in module compas_pb.conversions)": [[35, "compas_pb.conversions.pointcloud_from_pb"]], "pointcloud_to_pb() (in module compas_pb.conversions)": [[36, "compas_pb.conversions.pointcloud_to_pb"]], "polygon_from_pb() (in module compas_pb.conversions)": [[37, "compas_pb.conversions.polygon_from_pb"]], "polygon_to_pb() (in module compas_pb.conversions)": [[38, "compas_pb.conversions.polygon_to_pb"]], "polyhedron_from_pb() (in module compas_pb.conversions)": [[39, "compas_pb.conversions.polyhedron_from_pb"]], "polyhedron_to_pb() (in module compas_pb.conversions)": [[40, "compas_pb.conversions.polyhedron_to_pb"]], "polyline_from_pb() (in module compas_pb.conversions)": [[41, "compas_pb.conversions.polyline_from_pb"]], "polyline_to_pb() (in module compas_pb.conversions)": [[42, "compas_pb.conversions.polyline_to_pb"]], "projection_from_pb() (in module compas_pb.conversions)": [[43, "compas_pb.conversions.projection_from_pb"]], "projection_to_pb() (in module compas_pb.conversions)": [[44, "compas_pb.conversions.projection_to_pb"]], "quaternion_from_pb() (in module compas_pb.conversions)": [[45, "compas_pb.conversions.quaternion_from_pb"]], "quaternion_to_pb() (in module compas_pb.conversions)": [[46, "compas_pb.conversions.quaternion_to_pb"]], "reflection_from_pb() (in module compas_pb.conversions)": [[47, "compas_pb.conversions.reflection_from_pb"]], "reflection_to_pb() (in module compas_pb.conversions)": [[48, "compas_pb.conversions.reflection_to_pb"]], "rotation_from_pb() (in module compas_pb.conversions)": [[49, "compas_pb.conversions.rotation_from_pb"]], "rotation_to_pb() (in module compas_pb.conversions)": [[50, "compas_pb.conversions.rotation_to_pb"]], "scale_from_pb() (in module compas_pb.conversions)": [[51, "compas_pb.conversions.scale_from_pb"]], "scale_to_pb() (in module compas_pb.conversions)": [[52, "compas_pb.conversions.scale_to_pb"]], "shear_from_pb() (in module compas_pb.conversions)": [[53, "compas_pb.conversions.shear_from_pb"]], "shear_to_pb() (in module compas_pb.conversions)": [[54, "compas_pb.conversions.shear_to_pb"]], "sphere_from_pb() (in module compas_pb.conversions)": [[55, "compas_pb.conversions.sphere_from_pb"]], "sphere_to_pb() (in module compas_pb.conversions)": [[56, "compas_pb.conversions.sphere_to_pb"]], "torus_from_pb() (in module compas_pb.conversions)": [[57, "compas_pb.conversions.torus_from_pb"]], "torus_to_pb() (in module compas_pb.conversions)": [[58, "compas_pb.conversions.torus_to_pb"]], "transformation_from_pb() (in module compas_pb.conversions)": [[59, "compas_pb.conversions.transformation_from_pb"]], "transformation_to_pb() (in module compas_pb.conversions)": [[60, "compas_pb.conversions.transformation_to_pb"]], "translation_from_pb() (in module compas_pb.conversions)": [[61, "compas_pb.conversions.translation_from_pb"]], "translation_to_pb() (in module compas_pb.conversions)": [[62, "compas_pb.conversions.translation_to_pb"]], "vector_from_pb() (in module compas_pb.conversions)": [[63, "compas_pb.conversions.vector_from_pb"]], "vector_to_pb() (in module compas_pb.conversions)": [[64, "compas_pb.conversions.vector_to_pb"]], "any_from_pb() (in module compas_pb.core)": [[65, "compas_pb.core.any_from_pb"]], "any_to_pb() (in module compas_pb.core)": [[66, "compas_pb.core.any_to_pb"]], "deserialize_message_bts() (in module compas_pb.core)": [[67, "compas_pb.core.deserialize_message_bts"]], "deserialize_message_from_json() (in module compas_pb.core)": [[68, "compas_pb.core.deserialize_message_from_json"]], "primitive_from_pb() (in module compas_pb.core)": [[69, "compas_pb.core.primitive_from_pb"]], "primitive_to_pb() (in module compas_pb.core)": [[70, "compas_pb.core.primitive_to_pb"]], "serialize_message_bts() (in module compas_pb.core)": [[71, "compas_pb.core.serialize_message_bts"]], "serialize_message_to_json() (in module compas_pb.core)": [[72, "compas_pb.core.serialize_message_to_json"]], "pb_dump() (in module compas_pb)": [[73, "compas_pb.pb_dump"]], "pb_dump_bts() (in module compas_pb)": [[74, "compas_pb.pb_dump_bts"]], "pb_dump_json() (in module compas_pb)": [[75, "compas_pb.pb_dump_json"]], "pb_load() (in module compas_pb)": [[76, "compas_pb.pb_load"]], "pb_load_bts() (in module compas_pb)": [[77, "compas_pb.pb_load_bts"]], "pb_load_json() (in module compas_pb)": [[78, "compas_pb.pb_load_json"]], "pbserializerregistrationerror": [[79, "compas_pb.registry.PbSerializerRegistrationError"]], "serializerregistry (class in compas_pb.registry)": [[80, "compas_pb.registry.SerializerRegistry"]], "get_deserializer() (compas_pb.registry.serializerregistry class method)": [[81, "compas_pb.registry.SerializerRegistry.get_deserializer"]], "get_serializer() (compas_pb.registry.serializerregistry class method)": [[82, "compas_pb.registry.SerializerRegistry.get_serializer"]], "register_deserializer() (compas_pb.registry.serializerregistry class method)": [[83, "compas_pb.registry.SerializerRegistry.register_deserializer"]], "register_serializer() (compas_pb.registry.serializerregistry class method)": [[84, "compas_pb.registry.SerializerRegistry.register_serializer"]]}})